/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.reports;

import application.interceptor.LogApplication;
import application.session.SessionApplication;
import client.base.BaseView;
import entity.Log;
import entity.Sesion;
import entity.Usuario;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import util.EntityState;
import util.Icons;
import util.InstanceFactory;
import util.Strings;

/**
 *
 * @author dabarca
 */
public class SecurityLogView extends BaseView {

    /**
     * Creates new form SecurityLogView
     */
    LogApplication logApplication = InstanceFactory.Instance.getInstance("logApplication", LogApplication.class);
    SessionApplication sessionApplication = InstanceFactory.Instance.getInstance("sessionApplication", SessionApplication.class);

    public SecurityLogView() {
        initComponents();
        super.initialize();
        Date date = Calendar.getInstance().getTime();
        dateInitialMod.setMaxSelectableDate(date);
        dateFinalMod.setMaxSelectableDate(date);
        dateFinalCr.setMaxSelectableDate(date);
        dateInitialCr.setMaxSelectableDate(date);
        dateIniS.setMaxSelectableDate(date);
        dateFinS.setMaxSelectableDate(date);
        loadImageButton();
        fillCombos();
        setSpinnersModel();
        fillTableWithLog(logApplication.getAllLog());
        fillSessionTable(sessionApplication.getAllSession());
    }

    private void clearLogGrid() {
        DefaultTableModel model = (DefaultTableModel) gridLog.getModel();
        model.setRowCount(0);
    }

    private void fillTableWithLog(ArrayList<Log> logs) {
        clearLogGrid();
        if (logs != null) {
            DefaultTableModel model = (DefaultTableModel) gridLog.getModel();

            for (Log l : logs) {
                String userIdMod = l.getUsuarioByUsuarioActualizador() == null ? "root" : l.getUsuarioByUsuarioActualizador().getId();
                String userIdCre = l.getUsuarioByUsuarioCreador() == null ? "root" : l.getUsuarioByUsuarioCreador().getId();
                model.addRow(new Object[]{
                    l.getIdObjeto(),
                    EntityState.getMasters()[l.getTipo() + 1],
                    l.getIp(),
                    l.getMac(),
                    userIdMod,
                    userIdCre,
                    l.getFechaActualizacion(),
                    l.getFechaCreacion()
                });
            }
        }
    }

    private void setSpinnersModel() {
        SpinnerModel minuteModelIMod = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel hourModelIMod = new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerModel minuteModelFMod = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel hourModelFMod = new SpinnerNumberModel(0, 0, 23, 1);
        spinFHHourMod.setModel(hourModelFMod);
        spinIHHourMod.setModel(hourModelIMod);
        spinFHMinuteMod.setModel(minuteModelFMod);
        spinIHMinuteMod.setModel(minuteModelIMod);

        SpinnerModel minuteModelICr = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel hourModelICr = new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerModel minuteModelFCr = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel hourModelFCr = new SpinnerNumberModel(0, 0, 23, 1);
        spinFHHourCr.setModel(hourModelFCr);
        spinIHHourCr.setModel(hourModelICr);
        spinFHMinuteCr.setModel(minuteModelFCr);
        spinIHMinuteCr.setModel(minuteModelICr);

        SpinnerModel minuteModelIS = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel hourModelIS = new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerModel minuteModelFS = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel hourModelFS = new SpinnerNumberModel(0, 0, 23, 1);
        spinHourIS.setModel(hourModelIS);
        spinMinuteIS.setModel(minuteModelIS);
        spinHourFS.setModel(hourModelFS);
        spinMinuteFS.setModel(minuteModelFS);

    }

    private void loadImageButton() {
        btnSearch.setText("");
        btnSearchS.setText("");
        Icons.setButton(btnSearch, Icons.ICONOS.SEARCH.ordinal());
        Icons.setButton(btnSearchS, Icons.ICONOS.SEARCH.ordinal());
    }

    private void fillCombos() {
        comboMaster.setModel(new DefaultComboBoxModel(EntityState.getMasters()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jProgressBar1 = new javax.swing.JProgressBar();
        jTextField2 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        txtUserCreate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        comboMaster = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        dateInitialMod = new com.toedter.calendar.JDateChooser();
        dateFinalMod = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtObjectId = new javax.swing.JTextField();
        spinIHHourMod = new javax.swing.JSpinner();
        spinIHMinuteMod = new javax.swing.JSpinner();
        spinFHHourMod = new javax.swing.JSpinner();
        spinFHMinuteMod = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtUserMod = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        dateInitialCr = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        dateFinalCr = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        spinIHHourCr = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        spinIHMinuteCr = new javax.swing.JSpinner();
        spinFHHourCr = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        spinFHMinuteCr = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        gridScroll = new javax.swing.JScrollPane();
        gridLog = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gridSession = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txtUserCode = new javax.swing.JTextField();
        dateIniS = new com.toedter.calendar.JDateChooser();
        dateFinS = new com.toedter.calendar.JDateChooser();
        spinHourIS = new javax.swing.JSpinner();
        spinMinuteIS = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        spinMinuteFS = new javax.swing.JSpinner();
        jLabel21 = new javax.swing.JLabel();
        spinHourFS = new javax.swing.JSpinner();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnSearchS = new javax.swing.JButton();

        jScrollPane1.setViewportView(jEditorPane1);

        jTextField2.setText("jTextField2");

        setClosable(true);
        setTitle("Log de seguridad");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("BÃºsqueda"));

        jLabel2.setText("Usuario Creador:");

        jLabel1.setText("Tipo:");

        comboMaster.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Usuario Modificador:");

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel4.setText("Fecha inicial:");

        jLabel5.setText("Fecha final:");

        jLabel6.setText("Id Objeto:");

        jLabel7.setText("Hora Inicial:");

        jLabel8.setText("Hora Final:");

        jLabel9.setText(":");

        jLabel10.setText(":");

        jLabel11.setText("Fecha inicial:");

        jLabel12.setText("Fecha final:");

        jLabel13.setText("Hora Final:");

        jLabel14.setText("Hora Inicial:");

        jLabel15.setText(":");

        jLabel16.setText(":");

        jLabel17.setText("Fecha CreaciÃ³n");

        jLabel18.setText("Fecha ModificaciÃ³n");

        gridLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Objeto", "Tipo", "IP", "MAC", "Ãltimo Usuario Modificado", "Usuario Creador", "Fecha ModificaciÃ³n", "Fecha CreaciÃ³n"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gridLog.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        gridScroll.setViewportView(gridLog);
        if (gridLog.getColumnModel().getColumnCount() > 0) {
            gridLog.getColumnModel().getColumn(0).setMinWidth(100);
            gridLog.getColumnModel().getColumn(1).setMinWidth(120);
            gridLog.getColumnModel().getColumn(2).setMinWidth(100);
            gridLog.getColumnModel().getColumn(3).setMinWidth(100);
            gridLog.getColumnModel().getColumn(4).setMinWidth(120);
            gridLog.getColumnModel().getColumn(5).setMinWidth(120);
            gridLog.getColumnModel().getColumn(6).setMinWidth(120);
            gridLog.getColumnModel().getColumn(7).setMinWidth(120);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtUserCreate, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUserMod, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(comboMaster, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtObjectId, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateInitialMod, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(spinIHHourMod, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(jLabel9)
                                .addGap(5, 5, 5)
                                .addComponent(spinIHMinuteMod, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(spinFHHourMod, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinFHMinuteMod, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateFinalMod, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateInitialCr, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(spinIHHourCr, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinIHMinuteCr, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(dateFinalCr, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(spinFHHourCr, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinFHMinuteCr, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addGap(49, 49, 49))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gridScroll)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUserCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtObjectId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(comboMaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUserMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(dateInitialMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(dateFinalMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinIHHourMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinIHMinuteMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinFHHourMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(spinFHMinuteMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(dateInitialCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFinalCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(spinIHHourCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(spinIHMinuteCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(spinFHHourCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(spinFHMinuteCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gridScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("AuditorÃ­a", jPanel2);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("BÃºsqueda"));

        gridSession.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CÃ³digo Usuario", "Inicio SesiÃ³n", "Fin SesiÃ³n", "IP", "MAC"
            }
        ));
        jScrollPane2.setViewportView(gridSession);
        if (gridSession.getColumnModel().getColumnCount() > 0) {
            gridSession.getColumnModel().getColumn(0).setMinWidth(150);
            gridSession.getColumnModel().getColumn(1).setMinWidth(120);
            gridSession.getColumnModel().getColumn(2).setMinWidth(120);
            gridSession.getColumnModel().getColumn(3).setMinWidth(100);
            gridSession.getColumnModel().getColumn(4).setMinWidth(100);
        }

        jLabel19.setText("CÃ³digo Usuario:");

        jLabel20.setText(":");

        jLabel21.setText(":");

        jLabel22.setText("Fecha Final:");

        jLabel23.setText("Hora Final:");

        jLabel24.setText("Fecha Inicial:");

        jLabel25.setText("Hora Inicial:");

        btnSearchS.setText("Buscar");
        btnSearchS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spinHourIS, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinMinuteIS, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dateIniS, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                                .addComponent(jLabel22)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spinHourFS, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinMinuteFS, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateFinS, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtUserCode))
                .addContainerGap(88, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearchS)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtUserCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateIniS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinHourIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinMinuteIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel25)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFinS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinHourFS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinMinuteFS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel23))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btnSearchS)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        jTabbedPane1.addTab("Sesiones", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if (formValid()) {

            Date dateIniMod = dateInitialMod.getDate();
            Date dateFinMod = dateFinalMod.getDate();
            Calendar calendarIniMod = null;
            Calendar calendarFinMod = null;
            if (dateInitialMod.getDate() != null && dateFinalMod.getDate() != null) {
                calendarIniMod = new GregorianCalendar(
                        dateIniMod.getYear() + 1900,
                        dateIniMod.getMonth(),
                        dateIniMod.getDate(),
                        (Integer) spinIHHourMod.getValue(),
                        (Integer) spinIHMinuteMod.getValue()
                );

                calendarFinMod = new GregorianCalendar(
                        dateFinMod.getYear() + 1900,
                        dateFinMod.getMonth(),
                        dateFinMod.getDate(),
                        (Integer) spinFHHourMod.getValue(),
                        (Integer) spinFHMinuteMod.getValue()
                );
            }
            Date dateIniCr = dateInitialCr.getDate();
            Date dateFinCr = dateFinalCr.getDate();
            Calendar calendarIniCr = null;
            Calendar calendarFinCr = null;
            if (dateInitialCr.getDate() != null && dateFinalCr.getDate() != null) {
                calendarIniCr = new GregorianCalendar(
                        dateIniCr.getYear() + 1900,
                        dateIniCr.getMonth(),
                        dateIniCr.getDate(),
                        (Integer) spinIHHourCr.getValue(),
                        (Integer) spinIHMinuteCr.getValue()
                );
                calendarFinCr = new GregorianCalendar(
                        dateFinCr.getYear() + 1900,
                        dateFinCr.getMonth(),
                        dateFinCr.getDate(),
                        (Integer) spinFHHourCr.getValue(),
                        (Integer) spinFHMinuteCr.getValue()
                );
            }
            Log log = new Log();

            log.setIdObjeto(txtObjectId.getText().trim());

            if (comboMaster.getSelectedIndex() != 0) {
                log.setTipo(comboMaster.getSelectedIndex() - 1);
            }
            if (!txtUserCreate.getText().trim().equals("")) {
                Usuario user = new Usuario();

                user.setId(txtUserCreate.getText().trim());

                log.setUsuarioByUsuarioCreador(user);
            }
            if (!txtUserMod.getText().trim().equals("")) {
                Usuario user = new Usuario();

                user.setId(txtUserMod.getText().trim());

                log.setUsuarioByUsuarioActualizador(user);
            }
            fillTableWithLog(logApplication.getLog(
                    log,
                    calendarIniMod == null ? null : calendarIniMod.getTime(),
                    calendarFinMod == null ? null : calendarFinMod.getTime(),
                    calendarIniCr == null ? null : calendarIniCr.getTime(),
                    calendarFinCr == null ? null : calendarFinCr.getTime()));

        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSearchSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchSActionPerformed
        // TODO add your handling code here:
        Date dateIniCr = dateIniS.getDate();
        Date dateFinCr = dateFinS.getDate();
        Calendar calendarIniCr = null;
        Calendar calendarFinCr = null;
        if (dateIniS.getDate() != null && dateFinS.getDate() != null) {
            calendarIniCr = new GregorianCalendar(
                    dateIniCr.getYear() + 1900,
                    dateIniCr.getMonth(),
                    dateIniCr.getDate(),
                    (Integer) spinHourIS.getValue(),
                    (Integer) spinMinuteIS.getValue()
            );
            calendarFinCr = new GregorianCalendar(
                    dateFinCr.getYear() + 1900,
                    dateFinCr.getMonth(),
                    dateFinCr.getDate(),
                    (Integer) spinHourFS.getValue(),
                    (Integer) spinMinuteFS.getValue()
            );
            if (calendarIniCr.getTime().getTime() > calendarFinCr.getTime().getTime()) {
                JOptionPane.showMessageDialog(this, Strings.ERROR_DATE_PROVIDED, "Mensaje", JOptionPane.WARNING_MESSAGE);
                dateInitialMod.setBorder(errorBorder);
                dateFinalMod.setBorder(errorBorder);
                return;
            } else {
                dateInitialMod.setBorder(null);
                dateFinalMod.setBorder(null);
            }
        }
        Sesion s = new Sesion();
        Usuario u = new Usuario();
        String userId = txtUserCode.getText().trim();
        u.setId(userId);       
        s.setUsuario(u);
        fillSessionTable(sessionApplication.getSession(
                s,
                calendarIniCr == null ? null : calendarIniCr.getTime(),
                calendarFinCr == null ? null : calendarFinCr.getTime()
        ));
    }//GEN-LAST:event_btnSearchSActionPerformed
    private void fillSessionTable(ArrayList<Sesion> sessions) {
        clearSessionTable();
        if (sessions != null) {
            DefaultTableModel model = (DefaultTableModel) gridSession.getModel();

            sessions.stream().forEach((l) -> {
                String userId = l.getUsuario() == null ? "root" : l.getUsuario().getId();
                //String userIdCre = l.getUsuarioByUsuarioCreador() == null ? "root" : l.getUsuarioByUsuarioCreador().getId();
                model.addRow(new Object[]{
                    userId,
                    l.getInicioSesion(),
                    l.getFinSesion(),
                    l.getIp(),
                    l.getMac()
                });
            });
        }
    }

    private void clearSessionTable() {
        DefaultTableModel model = (DefaultTableModel) gridSession.getModel();
        model.setRowCount(0);
    }

    private boolean formValid() {
        String message = "";

        if (dateInitialMod.getDate() != null && dateFinalMod.getDate() != null) {
            Date dateIniMod = dateInitialMod.getDate();
            Date dateFinMod = dateFinalMod.getDate();
            Calendar calendarIniMod = new GregorianCalendar(
                    dateIniMod.getYear() + 1900,
                    dateIniMod.getMonth(),
                    dateIniMod.getDate(),
                    (Integer) spinIHHourMod.getValue(),
                    (Integer) spinIHMinuteMod.getValue()
            );
            Calendar calendarFinMod = new GregorianCalendar(
                    dateFinMod.getYear() + 1900,
                    dateFinMod.getMonth(),
                    dateFinMod.getDate(),
                    (Integer) spinFHHourMod.getValue(),
                    (Integer) spinFHMinuteMod.getValue()
            );

            if (calendarIniMod.getTime().getTime() > calendarFinMod.getTime().getTime()) {
                message += Strings.ERROR_DATE_PROVIDED + "\n";
                dateInitialMod.setBorder(errorBorder);
                dateFinalMod.setBorder(errorBorder);
            } else {
                dateInitialMod.setBorder(null);
                dateFinalMod.setBorder(null);
            }

        }
        if (dateInitialCr.getDate() != null && dateFinalCr.getDate() != null) {
            Date dateIniCr = dateInitialCr.getDate();
            Date dateFinCr = dateFinalCr.getDate();
            Calendar calendarIniCr = new GregorianCalendar(
                    dateIniCr.getYear() + 1900,
                    dateIniCr.getMonth(),
                    dateIniCr.getDate(),
                    (Integer) spinIHHourCr.getValue(),
                    (Integer) spinIHMinuteCr.getValue()
            );
            Calendar calendarFinCr = new GregorianCalendar(
                    dateFinCr.getYear() + 1900,
                    dateFinCr.getMonth(),
                    dateFinCr.getDate(),
                    (Integer) spinFHHourCr.getValue(),
                    (Integer) spinFHMinuteCr.getValue()
            );
            if (calendarIniCr.getTime().getTime() > calendarFinCr.getTime().getTime()) {
                message += Strings.ERROR_DATE_PROVIDED + "\n";
                dateInitialCr.setBorder(errorBorder);
                dateFinalCr.setBorder(errorBorder);
            } else {
                dateInitialCr.setBorder(null);
                dateFinalCr.setBorder(null);

            }

        }
        if (!message.equals("")) {
            JOptionPane.showMessageDialog(this, message, "Mensaje", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchS;
    private javax.swing.JComboBox comboMaster;
    private com.toedter.calendar.JDateChooser dateFinS;
    private com.toedter.calendar.JDateChooser dateFinalCr;
    private com.toedter.calendar.JDateChooser dateFinalMod;
    private com.toedter.calendar.JDateChooser dateIniS;
    private com.toedter.calendar.JDateChooser dateInitialCr;
    private com.toedter.calendar.JDateChooser dateInitialMod;
    private javax.swing.JTable gridLog;
    private javax.swing.JScrollPane gridScroll;
    private javax.swing.JTable gridSession;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JSpinner spinFHHourCr;
    private javax.swing.JSpinner spinFHHourMod;
    private javax.swing.JSpinner spinFHMinuteCr;
    private javax.swing.JSpinner spinFHMinuteMod;
    private javax.swing.JSpinner spinHourFS;
    private javax.swing.JSpinner spinHourIS;
    private javax.swing.JSpinner spinIHHourCr;
    private javax.swing.JSpinner spinIHHourMod;
    private javax.swing.JSpinner spinIHMinuteCr;
    private javax.swing.JSpinner spinIHMinuteMod;
    private javax.swing.JSpinner spinMinuteFS;
    private javax.swing.JSpinner spinMinuteIS;
    private javax.swing.JTextField txtObjectId;
    private javax.swing.JTextField txtUserCode;
    private javax.swing.JTextField txtUserCreate;
    private javax.swing.JTextField txtUserMod;
    // End of variables declaration//GEN-END:variables
}
